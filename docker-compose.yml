services:
  # The etcd container coordinates our single-node cluster.
  etcd:
    build: containers/etcd
    volumes:
      - ./_data/etcd:/data

  # The psql container runs the postgres server from the psqldata/data directory.
  psql:
    build: containers/psql
    volumes:
      - ./_data/psql:/var/lib/postgresql/data

  # The psql_test container runs an in-memory database for testing.
  psql_test:
    build: containers/psql
    tmpfs:
      - /var/lib/postgresql/data

  # The psqlclient container provides a client connection to the psql container.
  # TODO: add volume for persistent readline history, sql dumps, etc.
  psqlclient:
    build: containers/psql/client
    links:
      - psql
    environment:
      PGPASSWORD: heimlich
    command: psql -h psql -p 5432 -U postgres heim

  # The sentry container runs an instance of the Sentry error reporting service.
  sentry:
    image: slafs/sentry:8.0
    volumes:
      - ./_data/psql-sentry:/data
    ports:
      - "9000:9000"
    environment:
      SENTRY_URL_PREFIX: http://localhost:9000
      SENTRY_INITIAL_TEAM: euphoria
      SENTRY_INITIAL_PROJECT: heim-client
      SENTRY_INITIAL_PLATFORM: javascript
      SENTRY_INITIAL_KEY: sentry:sentry
      SENTRY_INITIAL_DOMAINS: localhost
      SECRET_KEY: onlyfordevelopment

  # The frontend container runs an ongoing gulp build.
  frontend:
    build: client
    volumes:
      - .:/srv/heim
      - ./_deps/node_modules:/srv/heim/client/node_modules
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      NODE_ENV: development
      SENTRY_ENDPOINT: http://sentry@localhost:9000/2
      HEIM_ORIGIN: http://localhost:8080
      EMBED_ORIGIN: http://localhost:8081
    command: gulp build

  # The upgradedb container runs the upgradedb command against the psql container.
  upgradedb:
    build: server/backend/psql/migrations
    links:
      - psql
    volumes:
      - ./server/backend/psql/migrations:/migrations
      - ./_data/gocache:/gocache
    environment:
      GOCACHE: /gocache
    command: sql-migrate up

  # The backend container runs the backend server against the psql container with etcd mocked out.
  backend:
    build: server/backend
    links:
      - psql
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
      - ./_data/gocache:/gocache
    ports:
      - "8080:80"
      - "2222:2222"
    environment:
      GOCACHE: /gocache
      HEIM_ID: dev1
      HEIM_ETCD: mock
      HEIM_ETCD_HOME: /dev/euphoria
      HEIM_CONFIG: /go/src/euphoria.leet.nu/heim/heim.yml
    command: run.sh heimctl serve -http :80 -console :2222

  # The backend_etcd container runs the backend server against the psql container using etcd.
  backend_etcd:
    build: server/backend
    links:
      - etcd
      - psql
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
      - ./_data/gocache:/gocache
    ports:
      - "8080:80"
      - "2222:2222"
    environment:
      GOCACHE: /gocache
      HEIM_ID: dev1
      HEIM_ETCD: http://etcd:4001
      HEIM_ETCD_HOME: /dev/euphoria
      HEIM_CONFIG: /go/src/euphoria.leet.nu/heim/heim.yml
    command: run.sh heimctl serve -http :80 -console :2222

  # The backend_console container connects to the backend console.
  backend_console:
    build: containers/console
    links:
      - backend
    volumes:
      - ./server/backend/console/keys:/keys
    tmpfs:
      - /keys/.copy
    command: run.sh

  # The backend_tests container is dedicated to running backend tests.
  backend_tests:
    build: server/backend
    links:
      - psql_test
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
      - ./_data/gocache:/gocache
    environment:
      GOCACHE: /gocache
      DSN: postgres://postgres:heimlich@psql_test/heim?sslmode=disable
    command: go test euphoria.leet.nu/heim/...

  # The embed container serves static files for the embed domain.
  embed:
    build: server/backend
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./_deps/godeps:/godeps
    ports:
      - "8081:80"
    environment:
      GOCACHE: /gocache
    command: run.sh heimctl serve-embed -http :80 -static /srv/heim/client/build/embed

  # The presence container collects and exposes metrics about currently-present users.
  presence:
    build: server/backend
    links:
      - etcd
      - psql
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
    ports:
      - "8082:80"
    environment:
      GOCACHE: /gocache
      HEIM_ETCD: http://etcd:4001
      HEIM_ETCD_HOME: /dev/euphoria
      HEIM_CONFIG: /go/src/euphoria.leet.nu/heim/heim.yml
    command: run.sh heimctl presence-exporter -http :80 -interval 10s

  # The retention container deletes expired messages from rooms with limited message retention.
  retention:
    build: server/backend
    links:
      - etcd
      - psql
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
    ports:
      - "8083:80"
    environment:
      GOCACHE: /gocache
      HEIM_ETCD: http://etcd:4001
      HEIM_ETCD_HOME: /dev/euphoria
      HEIM_CONFIG: /go/src/euphoria.leet.nu/heim/heim.yml
    command: run.sh heimctl log-retention -http :80 -interval 10s

  # The activity container collects and exposes metrics about overall chat activity.
  activity:
    build: server/backend
    links:
      - etcd
      - psql
    volumes:
      - .:/srv/heim
      - ./server:/go/src/euphoria.leet.nu/heim
      - ./server/backend/console/keys:/keys
      - ./_deps/godeps:/godeps
    ports:
      - "8084:80"
    environment:
      GOCACHE: /gocache
      HEIM_ETCD: http://etcd:4001
      HEIM_ETCD_HOME: /dev/euphoria
      HEIM_CONFIG: /go/src/euphoria.leet.nu/heim/heim.yml
    command: run.sh heimctl activity-exporter -http :80

  # The haproxy container runs the HAProxy reverse proxy.
  haproxy:
    build: containers/haproxy
    links:
      - backend
    volumes:
      - ./containers/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "8888:80"
