
// Basic colors
@background: #ffffff;
@primary: #008000;
@secondary: #4040a8;
@text: #000000;
@icon-mode: keep; // One of "keep", "invert", "grayscale".
// Notes on @icon-mode:
// keep     : Keeps the colors of various embedded graphics that have a
//            hard-coded tint unmodified. Use this together with Heim's
//            standard primary and secondary color.
// invert   : Inverts UI elements using the secondary color and grayscales
//            the remaining ones. Mostly there for the spooky theme.
// grayscale: Grayscales all colored icons and disables the graphics used for
//            indent lines. Use this if the other options do not match your
//            color choices.

// Supplementary colors and values
@dark-theme: if((lightness(@background) < 0.5), true, false);
@link-color: keep;
@visited-link-color: keep;
@nick-brightness: if((@dark-theme), 0.65, 1.0);
@mention-background: if((@dark-theme), #d1cdbf, #fdf9e7);
@mention-text: #000000;
@shadow-radius: 8px;

// Derived colors
@ui-background: if((@dark-theme), lighten(@background, 10%), darken(@background, 20%));
@pane-background: if((@dark-theme), @background, darken(@background, 5%));
@pane-selected-background: if((@dark-theme), lighten(@background, 5%), darken(@background, 10%));
@bar-background: @background;
@primary-background: if((@dark-theme), fadeout(@primary, 80%), fadeout(@primary, 90%));
@primary-active-background: if((@dark-theme), fadeout(@primary, 70%), fadeout(@primary, 80%));
@secondary-background: if((@dark-theme), fadeout(@secondary, 80%), fadeout(@secondary, 90%));
@secondary-active-background: if((@dark-theme), fadeout(@secondary, 70%), fadeout(@secondary, 80%));

@button-background: if((@dark-theme), lighten(@background, 10%), darken(@background, 10%));
@button-active-background: if((@dark-theme), lighten(@background, 20%), darken(@background, 20%));
@button-selected-background: if((@dark-theme), lighten(@background, 25%), darken(@background, 25%));
@button-color: @text;

@notification-selector-background: if((@dark-theme), lighten(@background, 5%), darken(@background, 10%));
@notification-button-selected-background: if((@dark-theme), lighten(@background, 15%), darken(@background, 25%));

@timestamp-background: if((@dark-theme), lighten(@background, 5%), darken(@background, 50%));
@timestamp-color: if((@dark-theme), lighten(@background, 25%), darken(@background, 25%));
@chat-background: @background;
@indent-line-base: fadeout(@text, 50%);
@indent-line-focused: @secondary;
@entry-background: @background;
@entry-border: @background;
@entry-focus-background: fadeout(@primary, 80%);
@entry-focus-border: @primary;

@pane-separator: if((@dark-theme), lighten(@background, 15%), darken(@background, 25%));
@intense-shadow-color: if((@dark-theme), darken(white, 25%), black);
@shadow-color: fadeout(@text, 85%);

// Icon transformation
.transform-icon() when (@icon-mode = grayscale) {
  .grayscale-icon;
}
.transform-icon() when (@icon-mode = invert) {
  filter: invert(1);
}
.transform-inner-icon() {
  .inner::before {
    .transform-icon;
  }
}

.grayscale-icon() {
  filter: grayscale(1) brightness(0) invert(0.5);
}
.grayscale-inner-icon() {
  .inner::before {
    .grayscale-icon;
  }
}

// Other mixins
.opaque-button() {
  .grayscale-inner-icon;
  background: @button-background;
  color: @button-color;

  &.touching, &:active {
    background: @button-active-background;
  }
}

// This should make most enclosed rules take precedence
#container {

  color: @text;

  a:link when not (@link-color = keep) {
    color: @link-color;
  }

  a:visited when not (@visited-link-color = keep) {
    color: @visited-link-color;
  }

  #ui-panes {
    background: @ui-background;
  }

  .info-pane {
    background: @pane-background;
    color: @secondary;

    .account-area .account-button {
      background: @primary-background;

      .inner {
        color: @primary;

        &::before {
          .grayscale-icon;
        }
      }

      &.touching, &:active {
        background: @primary-active-background;
      }
    }

    .account-area, .toolbox-button, .theme-chooser-button, .thread-list-container {
      border-color: @pane-separator;
    }

    .theme-chooser-button {
      background: @secondary-background;

      .inner {
        color: @secondary;
      }

      &.touching, &:active {
        background: @secondary-active-background;
      }
    }

    .thread-list-container {
      .thread {
        .info {
          opacity: 1;

          .title, .title a {
            color: @secondary;
          }
        }

        .children {
          border-color: @secondary;
        }
      }

      &::after {
        box-shadow: none;
      }
    }

    .notification-settings .mode-selector {
      background: @notification-selector-background;

      .mode when not (@icon-mode = keep) {
        .grayscale-inner-icon;
      }

      .mode.selected {
        background: @notification-button-selected-background;
      }
    }

    .notification-list {
      .notification.new-mention, .notification.new-reply, .notification.new-message {
        .transform-inner-icon;
        background: @pane-background;
        animation: none;
      }
    }

    .notification-list, .thread-list-container {
      &, & .thread {
        .notification, .info {
          &:hover, &.selected {
            background: @pane-selected-background;
          }
        }
      }
    }
  }

  .thread-popup .top-line {
    background: @pane-background;

    button {
      .transform-inner-icon;
      color: @secondary;
    }
  }

  .top-bar, .secondary-top-bar, #ui.disconnected .top-bar {
    background: @bar-background;
    box-shadow: 0 0 @shadow-radius @shadow-color;
  }

  .top-bar {
    .room .name, .title {
      color: @secondary;
    }

    .expand-info-pane, .collapse-info-pane, .close {
      .transform-inner-icon;
      opacity: 1;
    }

    .room .state {
      background: @primary;
      color: contrast(@primary);
      filter: brightness(@nick-brightness);

      &.touching, &:active {
        background: fadeout(@primary, 50%);
      }
    }

    .room-switcher {
      .room-switcher-expand, .room-switcher-apply, .room-switcher-cancel {
        .transform-inner-icon;
      }

      .room-switcher-inner {
        background: @pane-background;
        box-shadow: 0 0 @shadow-radius @intense-shadow-color;

        &.valid {
          box-shadow: 0 0 @shadow-radius fade(green, 50%);
        }

        &.invalid {
          box-shadow: 0 0 @shadow-radius fade(red, 50%);
        }
      }

      &.expanded {
        background: @pane-selected-background;
      }
    }

    .user-count {
      .opaque-button;
    }
  }

  .spinner {
    opacity: 1;
    .transform-icon;
  }

  .main-pane-stack, .info-pane, .sidebar-pane, .chat-pane-container {
    box-shadow: 0 0 @shadow-radius @shadow-color;
  }

  .chat-pane-container {
    .notice {

      .content .actions button {
        color: @primary;
      }

      &.notifications {
        background: @primary;
        color: contrast(@primary);
        filter: brightness(@nick-brightness);
      }
    }
  }

  .chat-pane {
    background: @chat-background;
    color: @text;

    &.timestamps-visible {
      background: @timestamp-background;
    }

    .messages-container {
      .messages-content {
        background: @chat-background;
      }

      .entry-box label {
        color: @text;
      }

      .entry-box.welcome {
        background: @primary-background;
        color: @primary;

        .message {
          border-color: @primary;
        }

        p {
          color: inherit;
        }
      }
    }
  }

  .messages {
    .timestamp {
      color: @timestamp-color;
    }

    .message-node.mention > .line .message {
      background: @mention-background;
      color: @mention-text;
    }

    .line .message-tall .message.expando {
      &::after {
        background: linear-gradient(to top, @chat-background, transparent 100px);
      }

      .expand {
        .opaque-button;
      }
    }

    .entry, .focus-target {
      border-color: @entry-border;
      background: @entry-background;
      box-shadow: 0 0 @shadow-radius @shadow-color;
    }

    .entry {
      input.nick {
        color: black;
        z-index: 10;
        filter: brightness(@nick-brightness);
      }

      input, textarea {
        color: @text;
      }
    }

    .replies.collapsed, .expand-rest, .replies.in-pane {
      .transform-inner-icon;
      color: @secondary;

      .message-preview {
        color: @text;
      }

      &, &.focus-target {
        &.touching, &:active {
          background: @secondary-background;
        }
      }
    }

    .replies.inline, .replies.expanded {
      & > .indent-line {
        filter: brightness(@nick-brightness);
      }

      & > .indent-line when (@icon-mode = invert) {
        filter: invert(1);
      }

      & > .indent-line when (@icon-mode = grayscale) {
        background: linear-gradient(to right, @indent-line-base 0, @indent-line-base 2px, transparent 2px);
      }

      &.focused {
        & > .indent-line {
          filter: brightness(@nick-brightness);
        }

        & > .indent-line when (@icon-mode = invert) {
          filter: invert(1);
        }

        & > .indent-line when (@icon-mode = grayscale) {
          background: linear-gradient(to right, @indent-line-focused 0, @indent-line-focused 2px, transparent 2px);
        }

        .entry::before {
          background-color: @chat-background;
          filter: brightness(@nick-brightness);
        }

        .entry::before when (@icon-mode = invert) {
          filter: invert(1);
          // Since we are being inverted, we have to invert the background color another time.
          background-color: rgba(255, 255, 255, 1) - @chat-background;
        }

        .entry::before when (@icon-mode = grayscale) {
          // Those are hard to reproduce without recreating the images.
          // TODO: Replicate at least the "hook" (without an arrowhead).
          display: none;
        }
      }
    }

    .line.marker {
      hr {
        border-color: @primary;
      }

      .label {
        color: @primary;
      }
    }

    .drag-handle-container {
      .drag-handle::before {
        .grayscale-icon;
      }

      .jump-to-bottom {
        background: @background;
        box-shadow: 0 0 @shadow-radius @shadow-color;

        &:active, &.touching {
          // LESS does apparently not provide a function for proper alpha blending, so this will have to do.
          background: fade(@secondary-background, 100%);
          box-shadow: 0 0 @shadow-radius @secondary;
        }

        &::before {
          .grayscale-icon;
        }
      }
    }
  }

  .messages.entry-focus {
    .entry, .focus-target {
      background: @entry-focus-background;
      border-color: @entry-focus-border;
    }
  }

  .sidebar-pane {
    background: @pane-background;
  }

  .nick:not(input), .message-emote {
    color: black;
    filter: brightness(@nick-brightness);
  }

  .dialog {
    background: @pane-background;

    .top-line .close {
      .grayscale-inner-icon;
    }

    // Okaaay...
    .content .bottom.green-bg {
      background: fadeout(@primary-background, 50%, relative);
      border-top-width: none;
    }
  }

  button.major-action {
    .opaque-button;
    background: @primary-background;
    color: @primary;

    &.touching, &:active {
      background: @primary-background;
    }
  }

  button.minor-action {
    .opaque-button;
    color: @primary;
  }

  button.major-secondary-action, button.minor-secondary-action, button.action {
    .opaque-button;
    color: fadeout(@text, 50%);
  }

  .account-settings-dialog .content .big-nick {
    color: black;
    filter: brightness(@nick-brightness);
  }

  .fields {
    .field-action-box, .text-field input {
      color: inherit;
      background: transparent;
      box-shadow: 0 0 @shadow-radius @shadow-color;
    }

    .check-field {
      input[type="checkbox"] + label {
        &::before when not (@icon-mode = keep) {
          .grayscale-icon;
        }

        &::after {
          background: @button-background;
          box-shadow: none;
        }
      }

      a {
        color: @primary;
      }
    }
  }

  .theme-chooser-dialog {
    background: @pane-background;
    color: @text;

    .separator {
      background: @text;
    }
  }

  .form-control {
    .form-control-button {
      &::before {
        background: @pane-background;
        box-shadow: 0 0 @shadow-radius @intense-shadow-color;
      }

      &::after when not (@icon-mode = keep) {
        .grayscale-icon;
      }
    }
  }

}
